`timescale 1ns/1ns

module tb_clk_divider;

    // module declaration

    	//clock
	    reg CLK;

    	// clk_divider
	    reg CLK_CLK_DIVIDER, SIZE_CLK_DIVIDER;
  	  wire OUT_VGA_CLK, OUT_GAME_CLK;

    //Module instantiation
	      clk_divider clk_divider (.CLK(CLK_CLK_DIVIDER), .SIZE(SIZE_CLK_DIVIDER), .VGA_CLK(OUT_VGA_CLK), .GAME_CLK(OUT_GAME_CLK));

      	initial
      	begin
      		forever
		begin
			#10 CLK = !CLK;
		end
      	end

      		 
      	initial
		begin

        		// Test pattern for clk_divider
        		#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b0, DOWN_MOVE = 1'b1;
        	    	#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b1, DOWN_MOVE = 1'b0;
        	    	#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b1, UP_MOVE = 1'b0, DOWN_MOVE = 1'b0;
        	    	#10 LEFT_MOVE = 1'b1, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b0, DOWN_MOVE = 1'b0;
        
        	    	#20 RESET_MOVE = 1'b1;
        	
        	    	#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b0, DOWN_MOVE = 1'b1;
        	    	#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b1, DOWN_MOVE = 1'b0;
        	    	#10 LEFT_MOVE = 1'b0, RIGHT_MOVE = 1'b1, UP_MOVE = 1'b0, DOWN_MOVE = 1'b0;
        	    	#10 LEFT_MOVE = 1'b1, RIGHT_MOVE = 1'b0, UP_MOVE = 1'b0, DOWN_MOVE = 1'b0;
        		
        	end
	
endmodule
